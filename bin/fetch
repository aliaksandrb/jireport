#!/usr/bin/env ruby
$:.unshift File.expand_path('../../lib', __FILE__)

require 'rubygems'
require 'jireport'
require 'yaml'
require 'logger'

include JiReport

DEFAULT_FETCH_LIMIT = 30

def fetch
  log = Logger.new(
    File.open(File.expand_path('../../log/fetch.log', __FILE__), 'a')
  )
  log.info "--- started ---"

  log.info "reading config/database.yml"
  db_conf_path = File.expand_path('../../config/database.yml', __FILE__)
  db_conf = YAML::load(File.open(db_conf_path))

  log.info "establishing connection with db"
  ActiveRecord::Base.establish_connection db_conf

  log.info "reading config/fetch.yml"
  conf_path = File.expand_path('../../config/fetch.yml', __FILE__)
  conf = YAML::load(File.open(conf_path))

  new_last_fetch = Time.now

  fetcher = JiraRSSFetch.new :login => conf['login'],
                             :password => conf['password'],
                             :url => conf['url'],
                             :proxy => conf['proxy']
  fetch_limit = conf[:fetch_limit] || DEFAULT_FETCH_LIMIT
  conf['users'].each_key do |user|
    log.info "fetching issues for #{user}"
    issues = fetcher.fetch_changed_issues user, fetch_limit
    log.info "tracking issues for #{user}"
    issues.each do |issue|
      Issue.track issue
    end
  end

  last_fetch_path = File.expand_path('../../config/last_fetch', __FILE__)
  log.info "rewriting config/last_fetch"
  File.open(last_fetch_path, 'w') do |file|
    file << new_last_fetch
  end

  log.info "--- finished successfully ---"
rescue StandardError => e
  msg = e.to_log
  STDERR.print msg
  log.error msg
end

fetch
